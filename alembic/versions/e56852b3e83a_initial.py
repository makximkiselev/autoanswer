"""initial

Revision ID: e56852b3e83a
Revises: 
Create Date: 2025-05-30 16:26:17.403083

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e56852b3e83a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('products_cleaned')
    op.drop_table('unmatched_models')
    op.drop_table('products')
    op.drop_table('prices')
    op.drop_table('messages')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('messages_pkey'))
    )
    op.create_table('prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('channel_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('message_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('message_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('prices_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('prices_pkey')),
    sa.UniqueConstraint('product_id', 'channel_name', 'message_id', name=op.f('prices_product_id_channel_name_message_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('standard_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('products_pkey'))
    )
    op.create_table('unmatched_models',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('raw_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_channel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('first_seen', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sample_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('unmatched_models_pkey'))
    )
    op.create_table('products_cleaned',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lineup', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name_std', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('products_cleaned_pkey')),
    sa.UniqueConstraint('name_std', name=op.f('products_cleaned_name_std_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
